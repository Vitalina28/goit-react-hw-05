{"version":3,"file":"static/js/681.ebfef167.chunk.js","mappings":"4JAgBA,IAde,WACb,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGf,C,wJCTaC,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAwB1B,OAtBAG,EAAAA,EAAAA,YAAU,WACR,IAGMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACC,OAAjBV,GAAW,GAAMQ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,EAAAA,IAAU,GAADC,OANnB,uCAOAA,OAAGvB,EAAO,qBAAAuB,OANX,qCAOV,KAAD,EAFKL,EAAQC,EAAAK,KAGdC,QAAQC,IAAIR,GACZX,EAAWW,EAASS,KAAKC,SAAST,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAElCM,QAAQC,IAAGP,EAAAU,IAAQ,QAED,OAFCV,EAAAC,KAAA,GAEnBT,GAAW,GAAOQ,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAd,EAAA,wBAErB,kBAbc,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAefpB,GACF,GAAG,CAACb,KAGFkC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGzB,IAAWpB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,IAClB9B,EAAQ+B,OAAS,EAChB/B,EAAQgC,KAAI,SAAAC,GAAM,OAChBjD,EAAAA,EAAAA,KAAA,MAAA6C,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASI,EAAOC,OAAO,QAC3BlD,EAAAA,EAAAA,KAAA,KAAA6C,SAAII,EAAOE,cAHNF,EAAOG,GAKX,KAGPpD,EAAAA,EAAAA,KAAA,KAAA6C,SAAG,2CAIX,EAEA,W","sources":["components/Loader.jsx","components/Reviews.jsx"],"sourcesContent":["import { Bars } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Bars\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"bars-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '8029d33b31a05f4bfc09ee2e171723f0';\n\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `${BASE_URL}${movieId}/reviews?api_key=${API_KEY}`\n        );\n        console.log(response);\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ul key={review.id}>\n            <li>\n              <h2>Author: {review.author}.</h2>\n              <p>{review.content}</p>\n            </li>\n          </ul>\n        ))\n      ) : (\n        <p>No reviews available for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_jsx","Bars","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","Reviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","console","log","data","results","t0","finish","stop","apply","arguments","_jsxs","children","Loader","length","map","review","author","content","id"],"sourceRoot":""}