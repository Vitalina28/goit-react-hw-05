{"version":3,"file":"static/js/597.38380bfb.chunk.js","mappings":"qQAKaA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAwB1B,OAtBAG,EAAAA,EAAAA,YAAU,WACR,IAGMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACC,OAAjBV,GAAW,GAAMQ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,EAAAA,IAAU,GAADC,OANnB,uCAOAA,OAAGvB,EAAO,qBAAAuB,OANX,qCAOV,KAAD,EAFKL,EAAQC,EAAAK,KAGdC,QAAQC,IAAIR,GACZX,EAAQW,EAASS,KAAKrB,MAAMa,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAE5BM,QAAQC,IAAGP,EAAAS,IAAQ,QAED,OAFCT,EAAAC,KAAA,GAEnBT,GAAW,GAAOQ,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,wBAErB,kBAbc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAefnB,GACF,GAAG,CAACb,KAGFiC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGxB,IAAWyB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAClB9B,EAAK+B,KAAI,SAAAC,GAAK,OACbH,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEI,IAAG,kCAAAhB,OAAoCe,EAAME,cAC7CC,IAAI,GACJC,MAAM,MACNC,OAAO,SAETR,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAMM,QACXT,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAMO,gBATNP,EAAMQ,GAWV,MAIb,EAEA,W,4CCrCA,IAde,WACb,OACEX,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CACHJ,OAAO,KACPD,MAAM,KACNM,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGf,C","sources":["components/Cast.jsx","components/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '8029d33b31a05f4bfc09ee2e171723f0';\n\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `${BASE_URL}${movieId}/credits?api_key=${API_KEY}`\n        );\n        console.log(response);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {cast.map(actor => (\n        <ul key={actor.id}>\n          <li>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt=\"\"\n              width=\"200\"\n              height=\"200\"\n            />\n            <h2>{actor.name}</h2>\n            <h3>{actor.character}</h3>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Bars } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Bars\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"bars-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","console","log","data","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","actor","src","profile_path","alt","width","height","name","character","id","Bars","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}